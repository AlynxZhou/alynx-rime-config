# Alynx Zhou <alynx.zhou@gmail.com> (https://alynx.moe/)
# 我一开始以为 RIME 这个 a/b/c 的 patch 语法和展开了写 YAML 是一样的。
# 结果不一样，a/b/c 是只 patch c，展开了则变成了 patch a。
# 感谢 Arch Linux CN 群里的 @akiirui 帮我解惑。
# 我说佛老师对不起对不起，我不懂规矩。
patch:
  schema_list:
    # 我只用朙月拼音简化字模式
    - schema: "luna_pinyin_simp"
    # 听说极光拼音更好，不要忘了安装 AUR 包 rime-aurora-pinyin。不过好像不能用 emoji。
    - schema: "aurora_pinyin"
  # 按 CapsLock 输出大写英文字母。
  ascii_composer/good_old_caps_lock: true
  # `inline_ascii` 在输入框内插入英文。
  # `commit_text` 候选文字上屏并切换至英文。
  # `commit_code` 输入拼音上屏并切换至英文。
  # `clear` 清除拼音并切换至英文。
  # `noop` 屏蔽此按键。
  # 如果你设置 `Caps_Lock` 为 `noop`，
  # 一个奇怪的问题是退格键不能用了，除非取消大写锁定。
  # 所以我直接设置文字上屏了。
  ascii_composer/switch_key/Caps_Lock: "commit_text"
  ascii_composer/switch_key/Shift_L: "commit_code"
  ascii_composer/switch_key/Shift_R: "commit_code"
  # 改掉原来的繁体字标题。
  switcher/caption: "【设置菜单】"
  # 用半角斜线而不是奇丑无比的全角斜线做分隔符。
  switcher/option_list_separator: "/"
  # 屏蔽 Ctrl-s 开启菜单，只允许 Ctrl-` 和 F4。
  switcher/hotkeys:
    # - "Control+s"
    - "Control+grave"
    - "F4"
  # 每页 5 个候选有点太少了。
  menu/page_size: 9
  # 这里修改的是整个输入法全局的键位，某些输入方案有自己的键位可以单独覆盖。
  # 但我暂时不需要。
  # Emacs 键位，我喜欢。
  # 可是谁给我解释一下为什么 Left 是按字拼音跳而 Right 是按字母跳？
  key_binder/bindings:
    # 我几乎不用繁体，只是记录一下可以这么写，而且朙月拼音简化版的简繁开关名字和普通的不一样。
    # - accept: "F5"
    #   toggle: "zh_simp"
    #   when: "always"
    - accept: "Control+p"
      send: "Up"
      when: "composing"
    - accept: "Control+n"
      send: "Down"
      when: "composing"
    - accept: "Control+b"
      send: "Left"
      when: "composing"
    - accept: "Control+f"
      send: "Right"
      when: "composing"
    - accept: "Alt+b"
      send: "Shift+Left"
      when: "composing"
    - accept: "Alt+f"
      send: "Shift+Right"
      when: "composing"
    - accept: "Control+a"
      send: "Home"
      when: "composing"
    - accept: "Control+e"
      send: "End"
      when: "composing"
    - accept: "Control+d"
      send: "Delete"
      when: "composing"
    # 这个用不了，不过估计也用不到。
    # - accept: "Control+k"
    #   send: "Shift+Delete"
    #   when: "composing"
    - accept: "Control+h"
      send: "BackSpace"
      when: "composing"
    - accept: "Alt+h"
      send: "Shift+BackSpace"
      when: "composing"
    - accept: "Control+g"
      send: "Escape"
      when: "composing"
    - accept: "Control+bracketleft"
      send: "Escape"
      when: "composing"
    - accept: "Alt+v"
      send: "Page_Up"
      when: "composing"
    - accept: "Control+v"
      send: "Page_Down"
      when: "composing"
    # 正常人不会用 Tab 切换拼音光标的，相信我。用它切换选项更快。
    # - accept: "ISO_Left_Tab"
    #   send: "Shift+Left"
    #   when: "composing"
    # - accept: "Shift+Tab"
    #   send: "Shift+Left"
    #   when: "composing"
    # - accept: "Tab"
    #   send: "Shift+Right"
    #   when: "composing"
    - accept: "Tab"
      send: "Down"
      when: "has_menu"
    - accept: "ISO_Left_Tab"
      send: "Up"
      when: "has_menu"
    # 鬼知道为什么这个也用不了！
    - accept: "Shift+Tab"
      send: "Up"
      when: "has_menu"
    - accept: "minus"
      send: "Page_Up"
      when: "has_menu"
    - accept: "equal"
      send: "Page_Down"
      when: "has_menu"
    - accept: "bracketleft"
      send: "Page_Up"
      when: "has_menu"
    - accept: "bracketright"
      send: "Page_Down"
      when: "has_menu"
    # 我觉得正常人不应该用逗号和句号翻页。
    # - accept: "comma"
    #   send: "Page_Up"
    #   when: "paging"
    # - accept: "period"
    #   send: "Page_Down"
    #   when: "has_menu"
    # 鬼才记得住这么多乱七八糟的快捷键，我翻菜单比背这玩意快多了。
    # - accept: "Control+Shift+1"
    #   select: ".next"
    #   when: "always"
    # - accept: "Control+Shift+2"
    #   toggle: "ascii_mode"
    #   when: "always"
    # - accept: "Control+Shift+3"
    #   toggle: "full_shape"
    #   when: "always"
    # - accept: "Control+Shift+4"
    #   toggle: simplification
    #   when: "always"
    # - accept: "Control+Shift+5"
    #   toggle: "extended_charset"
    #   when: "always"
    # - accept: "Control+Shift+exclam"
    #   select: "".next"
    #   when: "always"
    # - accept: "Control+Shift+at"
    #   toggle: "ascii_mode"
    #   when: "always"
    # - accept: "Control+Shift+numbersign"
    #   toggle: "full_shape"
    #   when: "always"
    # - accept: "Control+Shift+dollar"
    #   toggle: "simplification"
    #   when: "always"
    # - accept: "Control+Shift+percent"
    #   toggle: "extended_charset"
    #   when: "always"
    # 你就是那个经常害我变成全角的罪魁祸首！
    # - accept: "Shift+space"
    #   toggle: "full_shape"
    #   when: "always"
    # - accept: "Control+period"
    #   toggle: "ascii_punct"
    #   when: "always"
  # 朙月拼音现在根本不加载 default 里面的标点候选表，
  # 所以这部分移动到朙月拼音的设置里面去了。
